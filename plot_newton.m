% Visualize Newton iterates.
% f  - Function handle
% df - Function handle for the derivative of f
% xs - Vector of iterates generated by Newton's method.
function plot_newton(f, df, xs)
    % Evaluate f at the iterates and determine the range of x and f(x).
    % We use this information to make sure that the scaling of the plot
    % does not change between iterations.
    ys = [];
    for i = 1:length(xs)
        ys = [ys f(xs(i))];
    end
    xmax = add_margin(max(xs), 'high');
    xmin = add_margin(min(xs), 'low');
    ymax = add_margin(max(ys), 'high');
    ymin = add_margin(min(ys), 'low');
    
    % Compute the graph of f.
    ngraph = 100;
    xgraph = linspace(xmin, xmax, ngraph);
    ygraph = zeros(ngraph, 1);
    yline = zeros(ngraph, 1);
    for i = 1:ngraph
        ygraph(i) = f(xgraph(i));
    end
    
    for i = 1:length(xs)
        % Plot the graph of f.
        plot(xgraph, ygraph);
        hold;
        % Highlight the current iterate.
        plot([xs(i) xs(i)], [0.0 ys(i)], 'r--');
        % Compute and plot the tangent line.
        for j = 1:ngraph
            yline(j) = ys(i) + df(xs(i))*(xgraph(j) - xs(i));
        end
        plot(xgraph, yline, 'r');
        % Plot x-axis.
        plot(xgraph, zeros(ngraph, 1), 'k');
        % Scale axes.
        xlim([xmin xmax]);
        ylim([ymin ymax]);
        hold;
        % Wait for the user to press a key.
        pause;
    end
    close all;
end
